/*
session.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SessionSession struct for SessionSession
type SessionSession struct {
	Login *string `json:"login,omitempty"`
	Useragent *string `json:"useragent,omitempty"`
}

// NewSessionSession instantiates a new SessionSession object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionSession() *SessionSession {
	this := SessionSession{}
	return &this
}

// NewSessionSessionWithDefaults instantiates a new SessionSession object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionSessionWithDefaults() *SessionSession {
	this := SessionSession{}
	return &this
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *SessionSession) GetLogin() string {
	if o == nil || o.Login == nil {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionSession) GetLoginOk() (*string, bool) {
	if o == nil || o.Login == nil {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *SessionSession) HasLogin() bool {
	if o != nil && o.Login != nil {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *SessionSession) SetLogin(v string) {
	o.Login = &v
}

// GetUseragent returns the Useragent field value if set, zero value otherwise.
func (o *SessionSession) GetUseragent() string {
	if o == nil || o.Useragent == nil {
		var ret string
		return ret
	}
	return *o.Useragent
}

// GetUseragentOk returns a tuple with the Useragent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionSession) GetUseragentOk() (*string, bool) {
	if o == nil || o.Useragent == nil {
		return nil, false
	}
	return o.Useragent, true
}

// HasUseragent returns a boolean if a field has been set.
func (o *SessionSession) HasUseragent() bool {
	if o != nil && o.Useragent != nil {
		return true
	}

	return false
}

// SetUseragent gets a reference to the given string and assigns it to the Useragent field.
func (o *SessionSession) SetUseragent(v string) {
	o.Useragent = &v
}

func (o SessionSession) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Login != nil {
		toSerialize["login"] = o.Login
	}
	if o.Useragent != nil {
		toSerialize["useragent"] = o.Useragent
	}
	return json.Marshal(toSerialize)
}

type NullableSessionSession struct {
	value *SessionSession
	isSet bool
}

func (v NullableSessionSession) Get() *SessionSession {
	return v.value
}

func (v *NullableSessionSession) Set(val *SessionSession) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionSession) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionSession) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionSession(val *SessionSession) *NullableSessionSession {
	return &NullableSessionSession{value: val, isSet: true}
}

func (v NullableSessionSession) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionSession) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


