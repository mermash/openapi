/*
session.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SessionSessionID struct for SessionSessionID
type SessionSessionID struct {
	ID *string `json:"ID,omitempty"`
}

// NewSessionSessionID instantiates a new SessionSessionID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionSessionID() *SessionSessionID {
	this := SessionSessionID{}
	return &this
}

// NewSessionSessionIDWithDefaults instantiates a new SessionSessionID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionSessionIDWithDefaults() *SessionSessionID {
	this := SessionSessionID{}
	return &this
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *SessionSessionID) GetID() string {
	if o == nil || o.ID == nil {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionSessionID) GetIDOk() (*string, bool) {
	if o == nil || o.ID == nil {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *SessionSessionID) HasID() bool {
	if o != nil && o.ID != nil {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *SessionSessionID) SetID(v string) {
	o.ID = &v
}

func (o SessionSessionID) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ID != nil {
		toSerialize["ID"] = o.ID
	}
	return json.Marshal(toSerialize)
}

type NullableSessionSessionID struct {
	value *SessionSessionID
	isSet bool
}

func (v NullableSessionSessionID) Get() *SessionSessionID {
	return v.value
}

func (v *NullableSessionSessionID) Set(val *SessionSessionID) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionSessionID) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionSessionID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionSessionID(val *SessionSessionID) *NullableSessionSessionID {
	return &NullableSessionSessionID{value: val, isSet: true}
}

func (v NullableSessionSessionID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionSessionID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


